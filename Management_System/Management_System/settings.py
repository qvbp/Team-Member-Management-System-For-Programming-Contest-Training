"""
Django settings for Management_System project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from pathlib import Path
from celery.schedules import crontab

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-yvsh)4mmawg_(psv60xv&&59r*qrb956@50^0l=nc69)6#b5d_'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# 日志的级别： DEBUG  INFO  WARNING  ERROR  CRITICAL
LOG_LEVEL = 'WARNING'

#  静态文件
STATIC_URL = '/static/'


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'app01.apps.App01Config',
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Management_System.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': []
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Management_System.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'management_system',  # 数据库名字
        'USER': 'root',  # 用户名
        'PASSWORD': 'root123',  # 密码
        'HOST': '127.0.0.1',  # 那台机器安装了MySQL
        'PORT': 3306,
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'zh-hans'  # 这里修改中文和英文，en-us（英文）

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

###----Celery redis 配置-----###
# Broker配置，使用Redis作为消息中间件
BROKER_URL = 'redis://:@127.0.0.1:6379/0'

# BACKEND配置，使用redis
CELERY_RESULT_BACKEND = 'redis://:@127.0.0.1:6379/1'

CELERY_LOG_LEVEL = 'WARNING'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
# 结果序列化方案
CELERY_RESULT_SERIALIZER = 'json'

# 任务结果过期时间，秒
CELERY_TASK_RESULT_EXPIRES = None

# 时区配置
CELERY_TIMEZONE = 'Asia/Shanghai'

# 指定任务的位置
CELERY_IMPORTS = (
    'app01.catch_data.cf_catch',
    'app01.catch_data.AtCoder_catch',
    'app01.catch_data.LuoGu_catch',
    'app01.catch_data.NewCode_catch',
    'app01.catch_data.VJudge_catch',
    'app01.catch_data.resent_contest_catch',
    'app01.update_data.DailySolvedRecord'
)

#
CELERYBEAT_SCHEDULE = {
    'cf_catch': {
        # 任务路径
        'task': 'app01.catch_data.cf_catch.cf_crawl_data',
        # 每天凌晨1点更新
        'schedule': crontab(minute='0', hour='1'),
        'args': ()
    },

    'AtCoder_catch': {
            # 任务路径
            'task': 'app01.catch_data.AtCoder_catch.AtCoder_crawl_data',
            # 每天凌晨1点更新
            'schedule': crontab(minute='0', hour='1'),
            'args': ()
    },

    'LuoGu_catch': {
            # 任务路径
            'task': 'app01.catch_data.LuoGu_catch.LuoGu_crawl_data',
            # 每天凌晨1点更新
            'schedule': crontab(minute='0', hour='1'),
            'args': ()
        },

    'NewCode_catch': {
            # 任务路径
            'task': 'app01.catch_data.NewCode_catch.NewCode_crawl_data',
            # 每天凌晨1点更新
            'schedule': crontab(minute='0', hour='1'),
            'args': ()
        },

    'VJudge_catch': {
            # 任务路径
            'task': 'app01.catch_data.VJudge_catch.VJudge_crawl_data',
            # 每天凌晨1点更新
            'schedule': crontab(minute='0', hour='1'),
            'args': ()
        },

    'resent_contest_catch': {
            # 任务路径
            'task': 'app01.catch_data.resent_contest_catch.contest_crawl_data',
            # 每天凌晨1点更新
            'schedule': crontab(minute='0', hour='1'),
            'args': ()
        },

    'DailySolvedRecord': {
            # 任务路径
            'task': 'app01.update_data.DailySolvedRecord.update_daily_records',
            # 每天凌晨2点更新
            'schedule': crontab(minute='0', hour='2'),
            'args': ()
        },
}







